{"version":3,"sources":["services/themoviedb-api.js","images/noImagePlaceholder.svg","views/FilmView/FilmView.module.css","views/FilmView/FilmView.jsx"],"names":["BASE_URL","API_KEY","IMG_URL","size","fetchWithErrorHandling","url","fetch","then","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovies","query","page","fetchFilmDetails","movieId","fetchCredits","fetchReviews","module","exports","override","css","CastView","lazy","ReviewsView","FilmView","filmAPI","filmId","useParams","useState","film","setFilm","navigate","useNavigate","useEffect","type","className","s","backButton","onClick","filmCard","src","poster_path","noImagePlaceholder","alt","original_title","width","height","filmDetails","vote_average","overview","undefined","genres","name","addInfo","addInfoList","to","isActive","activeLink","link","cast","fallback","path","element"],"mappings":"yIAAA,gNAAMA,EAAW,+BACXC,EAAU,mCACHC,EAAU,SAAAC,GAAI,2CACKA,IAEhC,SAASC,IAAkC,IAAXC,EAAU,uDAAJ,GACpC,OAAOC,MAAMD,GAAKE,MAAK,SAAAC,GAAQ,OAC7BA,EAASC,GACLD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,iBAI1B,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBJ,EADwB,uCACeC,IAIvC,SAASc,IAAmC,IAAvBC,EAAsB,uDAAd,GAAIC,EAAU,uDAAH,EAC7C,OAAOb,EAAuB,GAAD,OACxBJ,EADwB,iCACSC,EADT,kBAC0Be,EAD1B,iBACwCC,IAIhE,SAASC,IAAkC,IAAjBC,EAAgB,uDAAN,KACzC,OAAOf,EAAuB,GAAD,OACxBJ,EADwB,kBACNmB,EADM,oBACalB,IAIrC,SAASmB,IAA8B,IAAjBD,EAAgB,uDAAN,KACrC,OAAOf,EAAuB,GAAD,OACxBJ,EADwB,kBACNmB,EADM,4BACqBlB,IAI7C,SAASoB,IAAwC,IAA3BF,EAA0B,uDAAhB,KAAMF,EAAU,uDAAH,EAClD,OAAOb,EAAuB,GAAD,OACxBJ,EADwB,kBACNmB,EADM,4BACqBlB,EADrB,iBACqCgB,M,gCCvCrD,QAA0B,gD,mBCCzCK,EAAOC,QAAU,CAAC,SAAW,2BAA2B,YAAc,8BAA8B,QAAU,0BAA0B,KAAO,uBAAuB,WAAa,kDAAkD,YAAc,8BAA8B,KAAO,uBAAuB,WAAa,+B,0LCctTC,EAAWC,cAAH,8FAMRC,EAAWC,gBAAK,kBACpB,gCAEIC,EAAcD,gBAAK,kBACvB,gCAGa,SAASE,IACtB,IAAQ3B,EAAY4B,IACZC,EAAWC,cAAXD,OACR,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAWC,cAMjB,OAJAC,qBAAU,WACRR,IAAyBC,GAAQxB,KAAK4B,KACrC,CAACJ,IAGF,mCACGG,GACC,qCACE,wBACEK,KAAK,SACLC,UAAWC,IAAEC,WACbC,QAAS,kBAAMP,GAAU,IAH3B,qBAOA,oCACE,sBAAKI,UAAWC,IAAEG,SAAlB,UACE,qBACEC,IACEX,EAAKY,YAAL,UACO5C,EAAQ,QAAUgC,EAAKY,aAC1BC,IAENC,IAAKd,EAAKe,eACVC,MAAM,MACNC,OAAO,QAET,sBAAKX,UAAWC,IAAEW,YAAlB,UACE,6BAAKlB,EAAKe,iBACV,6CAAoC,GAApBf,EAAKmB,aAArB,OACA,0CACA,4BAAInB,EAAKoB,WACT,wCACA,iCACsBC,IAAnBrB,EAAKsB,OAAO,GAAmBtB,EAAKsB,OAAO,GAAGC,KAAO,gBAI5D,sBAAKjB,UAAWC,IAAEiB,QAAlB,UACE,wDACA,qBAAIlB,UAAWC,IAAEkB,YAAjB,UACE,6BACE,cAAC,IAAD,CACEC,GAAE,kBAAa7B,EAAb,SACFS,UAAW,qBAAGqB,SACDpB,IAAEqB,WAAarB,IAAEsB,MAHhC,oBASF,6BACE,cAAC,IAAD,CACEH,GAAE,kBAAa7B,EAAb,YACFS,UAAW,qBAAGqB,SACDpB,IAAEqB,WAAarB,IAAEsB,MAHhC,6BAWN,qBAAKvB,UAAWC,IAAEuB,KAAlB,SACE,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,CAAiBxC,IAAKD,EAAUrB,KAAM,KAA1D,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+D,KAAK,OAAOC,QAAS,cAACzC,EAAD,CAAUK,OAAQA,MAC9C,cAAC,IAAD,CACEmC,KAAK,UACLC,QAAS,cAACvC,EAAD,CAAaG,OAAQA","file":"static/js/FilmView.ebf4c8aa.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '6979cd1cbea8e51a3659aff13232cb9d';\r\nexport const IMG_URL = size =>\r\n  `https://image.tmdb.org/t/p/${size}`;\r\n\r\nfunction fetchWithErrorHandling(url = '') {\r\n  return fetch(url).then(response =>\r\n    response.ok\r\n      ? response.json()\r\n      : Promise.reject(new Error('Not found')),\r\n  );\r\n}\r\n\r\nexport function fetchTrending() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchMovies(query = '', page = 1) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\r\n  );\r\n}\r\n\r\nexport function fetchFilmDetails(movieId = null) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchCredits(movieId = null) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchReviews(movieId = null, page = 1) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=${page}`,\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/noImagePlaceholder.bdcf787f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmCard\":\"FilmView_filmCard__z_yzc\",\"filmDetails\":\"FilmView_filmDetails__38Kyy\",\"addInfo\":\"FilmView_addInfo__2tAP2\",\"link\":\"FilmView_link__1Lb3d\",\"activeLink\":\"FilmView_activeLink__2vYwO FilmView_link__1Lb3d\",\"addInfoList\":\"FilmView_addInfoList__3BxGL\",\"cast\":\"FilmView_cast__2tm4f\",\"backButton\":\"FilmView_backButton__1x5PU\"};","import { useEffect, useState, lazy, Suspense } from 'react';\r\nimport {\r\n  NavLink,\r\n  useParams,\r\n  Routes,\r\n  Route,\r\n  useNavigate,\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport * as filmAPI from '../../services/themoviedb-api';\r\nimport noImagePlaceholder from '../../images/noImagePlaceholder.svg';\r\nimport s from './FilmView.module.css';\r\nimport { css } from '@emotion/react';\r\nimport PropagateLoader from 'react-spinners/PropagateLoader';\r\n\r\nconst override = css`\r\n  display: block;\r\n  text-align: center;\r\n  border-color: black;\r\n`;\r\n\r\nconst CastView = lazy(() =>\r\n  import(/* webpackChunkName: \"CastView\" */ '../CastView'),\r\n);\r\nconst ReviewsView = lazy(() =>\r\n  import(/* webpackChunkName: \"ReviewsView\" */ '../ReviewsView'),\r\n);\r\n\r\nexport default function FilmView() {\r\n  const { IMG_URL } = filmAPI;\r\n  const { filmId } = useParams();\r\n  const [film, setFilm] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    filmAPI.fetchFilmDetails(filmId).then(setFilm);\r\n  }, [filmId]);\r\n\r\n  return (\r\n    <>\r\n      {film && (\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            className={s.backButton}\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            Go back\r\n          </button>\r\n          <article>\r\n            <div className={s.filmCard}>\r\n              <img\r\n                src={\r\n                  film.poster_path\r\n                    ? `${IMG_URL('w300') + film.poster_path}`\r\n                    : noImagePlaceholder\r\n                }\r\n                alt={film.original_title}\r\n                width=\"300\"\r\n                height=\"450\"\r\n              />\r\n              <div className={s.filmDetails}>\r\n                <h2>{film.original_title}</h2>\r\n                <p>User Score: {film.vote_average * 10}%</p>\r\n                <h3>Overview</h3>\r\n                <p>{film.overview}</p>\r\n                <h4>Genres</h4>\r\n                <p>\r\n                  {film.genres[0] !== undefined ? film.genres[0].name : 'Other'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className={s.addInfo}>\r\n              <h3>Additional information</h3>\r\n              <ul className={s.addInfoList}>\r\n                <li>\r\n                  <NavLink\r\n                    to={`/movies/${filmId}/cast`}\r\n                    className={({ isActive }) =>\r\n                      isActive ? s.activeLink : s.link\r\n                    }\r\n                  >\r\n                    Cast\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to={`/movies/${filmId}/reviews`}\r\n                    className={({ isActive }) =>\r\n                      isActive ? s.activeLink : s.link\r\n                    }\r\n                  >\r\n                    Reviews\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className={s.cast}>\r\n              <Suspense fallback={<PropagateLoader css={override} size={15} />}>\r\n                <Routes>\r\n                  <Route path=\"cast\" element={<CastView filmId={filmId} />} />\r\n                  <Route\r\n                    path=\"reviews\"\r\n                    element={<ReviewsView filmId={filmId} />}\r\n                  />\r\n                </Routes>\r\n              </Suspense>\r\n            </div>\r\n          </article>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nFilmView.propTypes = {\r\n  filmId: PropTypes.string.isRequired,\r\n};\r\n"],"sourceRoot":""}