{"version":3,"sources":["services/themoviedb-api.js","views/HomeView/HomeView.jsx"],"names":["BASE_URL","API_KEY","IMG_URL","size","fetchWithErrorHandling","url","fetch","then","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovies","query","page","fetchFilmDetails","movieId","fetchCredits","fetchReviews","HomeView","useState","films","setFilms","useEffect","filmAPI","results","map","id","title","to"],"mappings":"yIAAA,gNAAMA,EAAW,+BACXC,EAAU,mCACHC,EAAU,SAAAC,GAAI,2CACKA,IAEhC,SAASC,IAAkC,IAAXC,EAAU,uDAAJ,GACpC,OAAOC,MAAMD,GAAKE,MAAK,SAAAC,GAAQ,OAC7BA,EAASC,GACLD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,iBAI1B,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBJ,EADwB,uCACeC,IAIvC,SAASc,IAAmC,IAAvBC,EAAsB,uDAAd,GAAIC,EAAU,uDAAH,EAC7C,OAAOb,EAAuB,GAAD,OACxBJ,EADwB,iCACSC,EADT,kBAC0Be,EAD1B,iBACwCC,IAIhE,SAASC,IAAkC,IAAjBC,EAAgB,uDAAN,KACzC,OAAOf,EAAuB,GAAD,OACxBJ,EADwB,kBACNmB,EADM,oBACalB,IAIrC,SAASmB,IAA8B,IAAjBD,EAAgB,uDAAN,KACrC,OAAOf,EAAuB,GAAD,OACxBJ,EADwB,kBACNmB,EADM,4BACqBlB,IAI7C,SAASoB,IAAwC,IAA3BF,EAA0B,uDAAhB,KAAMF,EAAU,uDAAH,EAClD,OAAOb,EAAuB,GAAD,OACxBJ,EADwB,kBACNmB,EADM,4BACqBlB,EADrB,iBACqCgB,M,uHCnCrD,SAASK,IACtB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,qBAAU,WACRC,MAAwBpB,MAAK,SAAAC,GAAQ,OAAIiB,EAASjB,EAASoB,cAC1D,IAGD,qCACE,gDACCJ,GACC,6BACGA,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,+BACE,cAAC,IAAD,CAAMC,GAAE,iBAAYF,GAApB,SAA2BC,IAD7B,MAASD","file":"static/js/HomeView.56fe5195.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '6979cd1cbea8e51a3659aff13232cb9d';\r\nexport const IMG_URL = size =>\r\n  `https://image.tmdb.org/t/p/${size}`;\r\n\r\nfunction fetchWithErrorHandling(url = '') {\r\n  return fetch(url).then(response =>\r\n    response.ok\r\n      ? response.json()\r\n      : Promise.reject(new Error('Not found')),\r\n  );\r\n}\r\n\r\nexport function fetchTrending() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchMovies(query = '', page = 1) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\r\n  );\r\n}\r\n\r\nexport function fetchFilmDetails(movieId = null) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchCredits(movieId = null) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchReviews(movieId = null, page = 1) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=${page}`,\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as filmAPI from '../../services/themoviedb-api';\r\n\r\nexport default function HomeView() {\r\n  const [films, setFilms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    filmAPI.fetchTrending().then(response => setFilms(response.results));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Trending today</h1>\r\n      {films && (\r\n        <ul>\r\n          {films.map(({ id, title }) => (\r\n            <li key={id}>\r\n              <Link to={`movies/${id}`}>{title}</Link>;\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}