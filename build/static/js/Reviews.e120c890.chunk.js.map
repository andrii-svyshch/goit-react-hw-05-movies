{"version":3,"sources":["components/Reviews/Reviews.jsx"],"names":["Reviews","filmId","useState","reviews","setReviews","useEffect","filmAPI","then","total_results","results","map","author","id","content"],"mappings":"yNAIe,SAASA,EAAT,GAA8B,IAAXC,EAAU,EAAVA,OAChC,EAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,qBAAU,WACRC,IAAqBL,GAAQM,KAAKH,KACjC,CAACH,IAEGE,GAAqC,IAA1BA,EAAQK,cACxB,6BACGL,EAAQM,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACnB,+BACE,0CAAaF,KACb,4BAAIE,MAFGD,QAOb","file":"static/js/Reviews.e120c890.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport * as filmAPI from '../../services/themoviedb-api';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Reviews({ filmId }) {\r\n  const [reviews, setReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    filmAPI.fetchReviews(filmId).then(setReviews);\r\n  }, [filmId]);\r\n\r\n  return reviews && reviews.total_results !== 0 ? (\r\n    <ul>\r\n      {reviews.results.map(({ author, id, content }) => (\r\n        <li key={id}>\r\n          <h3>Author: {author}</h3>\r\n          <p>{content}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <p>We don't have any reviews for this monie.</p>\r\n  );\r\n}\r\n\r\nReviews.propTypes = {\r\n  filmId: PropTypes.string.isRequired,\r\n};\r\n"],"sourceRoot":""}